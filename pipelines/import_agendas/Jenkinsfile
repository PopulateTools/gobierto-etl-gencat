email = "popu-servers+jenkins@populate.tools "
pipeline {
    agent any
    environment {
        PATH = "$HOME/.rbenv/shims:$PATH"
        GOBIERTO_ETL_UTILS = "/var/www/gobierto-etl-utils/current"
        GENCAT_ETL = "/var/www/gobierto-etl-gencat/current"
        DATASET_NAME = "Viajes"
        DATASET_SLUG = "viajes"
        DATASET_TABLE_NAME = "trips"
        // Variables that must be defined via Jenkins UI:
        // GOBIERTO = "/var/www/gobierto/currentt"
        // GENCAT_SITE_DOMAIN = "gencat.gobierto.es"
        // RAILS_ENV = "production"
        // CLEAR_PREVIOUS_DATA = "True" or "False" (it must be a string with the boolean values from Python)
    }
    stages {
        stage('Extract > Download last start query date') {
            steps {
                sh "cd ${GOBIERTO_ETL_UTILS}; ruby operations/download-s3/run.rb 'gencat/gobierto_people/last_execution/last_start_query_date-${RAILS_ENV}.txt' /tmp/gencat/downloads"
            }
        }
        stage('Extract > Clear previous data') {
            when { expression { env.CLEAR_PREVIOUS_DATA == 'True' } }
            steps {
                sh "cd ${GOBIERTO}; bin/rails runner ${GENCAT_ETL}/operations/gobierto_people/clear-previous-data/run.rb ${GENCAT_SITE_DOMAIN}"
            }
        }
        stage('Extract > Check data presence of any time') {
            when { expression { env.CLEAR_PREVIOUS_DATA == 'True' } }
            steps {
                sh "cd ${GENCAT_ETL}; ruby operations/gobierto_people/check-data-presence/run.rb ${RAILS_ENV} all forever"
            }
        }
        stage('Extract > Check data presence since last build') {
            when { expression { env.CLEAR_PREVIOUS_DATA != 'True' } }
            steps {
                sh "cd ${GENCAT_ETL}; ruby operations/gobierto_people/check-data-presence/run.rb ${RAILS_ENV} all"
            }
        }
        stage('Extract > Clean previous downloads') {
            steps {
                sh "cd ${GENCAT_ETL}; ruby operations/gobierto_people/clear-path/run.rb downloads/datasets"
            }
        }
        stage('Extract > Download data') {
            steps {
                sh "while read args; do cd ${GOBIERTO_ETL_UTILS}; ruby operations/download/run.rb \$args; done < /tmp/gencat/datasets_for_extraction"
            }
        }
        stage('Transform & Load > Process resources') {
            steps {
                sh "cd ${GOBIERTO}; bin/rails runner ${GENCAT_ETL}/operations/gobierto_people/import-gifts/run.rb downloads/datasets/gifts.csv ${GENCAT_SITE_DOMAIN}"
                sh "cd ${GOBIERTO}; bin/rails runner ${GENCAT_ETL}/operations/gobierto_people/import-invitations/run.rb downloads/datasets/invitations.csv ${GENCAT_SITE_DOMAIN}"
                sh "cd ${GOBIERTO}; bin/rails runner ${GENCAT_ETL}/operations/gobierto_people/import-trips/run.rb downloads/datasets/trips.csv ${GENCAT_SITE_DOMAIN}"
                sh "cd ${GOBIERTO}; bin/rails runner ${GENCAT_ETL}/operations/gobierto_people/import-events/run.rb downloads/datasets/events.csv ${GENCAT_SITE_DOMAIN}"
            }
        }
        stage('Transform & Load > Upload trips to Gobierto Data') {
            steps {
              sh "cd ${GOBIERTO}; bin/rails runner ${GENCAT_ETL}/operations/gobierto_people/export-trips/run.rb ${GENCAT_SITE_DOMAIN} gencat_trips_${RAILS_ENV}.csv"
              sh '''#!/bin/bash
                source ${GENCAT_ETL}/.rbenv-vars;
                cd ${GOBIERTO_ETL_UTILS};
                ruby operations/gobierto_data/upload-dataset/run.rb \
                  --api-token $API_TOKEN \
                  --name "$DATASET_NAME" \
                  --slug $DATASET_SLUG \
                  --table-name $DATASET_TABLE_NAME \
                  --gobierto-url https://${GENCAT_SITE_DOMAIN} \
                  --schema-path ${GENCAT_ETL}/pipelines/import_agendas/schema.json \
                  --file-path /tmp/gencat/gencat_trips_${RAILS_ENV}.csv
              '''
            }
        }
        stage('Documentation > Upload last execution date') {
            steps {
                sh "cd ${GOBIERTO_ETL_UTILS}; ruby operations/upload-s3/run.rb /tmp/gencat/output/start_query_date.txt 'gencat/gobierto_people/last_execution/last_start_query_date-${RAILS_ENV}.txt'"
            }
        }
        stage('Clear cache') {
            steps {
                sh "cd ${GOBIERTO}; bin/rails runner ${GOBIERTO_ETL_UTILS}/operations/gobierto/clear-cache/run.rb"
            }
        }
    }
    post {
        failure {
            echo 'This will run only if failed'
            mail body: "Project: ${env.JOB_NAME} - Build Number: ${env.BUILD_NUMBER} - URL de build: ${env.BUILD_URL}",
                charset: 'UTF-8',
                subject: "ERROR CI: Project name -> ${env.JOB_NAME}",
                to: email
        }
    }
}
